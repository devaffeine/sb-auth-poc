version: "3.9"

services:

  mysql:
    hostname: mysql-auth-poc.local
    image: mysql:8-oracle
    ports:
      - "3306:3306"
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -uroot -p${MYSQL_ROOT_PASSWORD}"
        ]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "256M"
        reservations:
          cpus: "1"
          memory: "128M"

  splunk:
    image: splunk/splunk:latest
    ports:
      - "8000:8000"
      - "8088:8088"
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_HTTP_PORT: 8000
      SPLUNK_PASSWORD: ${SPLUNK_PASSWORD}
      SPLUNK_HEC_TOKEN: ${SPLUNK_TOKEN}
      SPLUNK_HEC_SSL: false
      SPLUNK_HEC_PORT: 8088
      SPLUNK_LICENSE_URI: Free
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:8088/services/collector/health | grep 'HEC is healthy'"
        ]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s

  auth-poc:
    image: ghcr.io/devaffeine/sb-auth-poc:latest
    depends_on:
      mysql:
        condition: service_healthy
      splunk:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      DB_HOSTNAME: mysql
      DB_PORT: 3306
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_NAME: ${MYSQL_DATABASE}
      SPLUNK_URL: http://splunk:8088/
      SPLUNK_TOKEN: ${SPLUNK_TOKEN}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl http://localhost:8080/actuator/health | grep UP"
        ]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1G"
        reservations:
          cpus: "1"
          memory: "1G"

  postman:
    image: postman/newman:alpine
    depends_on:
      auth-poc:
        condition: service_healthy
    volumes:
      - ./postman.json:/etc/newman/postman.json
    command:
      run /etc/newman/postman.json -k -r cli
